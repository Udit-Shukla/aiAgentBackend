name: Deploy to DigitalOcean

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: SSH into Droplet and deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            set -e

            echo "📦 Installing required packages..."
            apt-get update
            apt-get install -y nginx certbot python3-certbot-nginx git

            echo "🔐 Updating UFW firewall rules..."
            ufw allow 'Nginx Full'
            ufw allow OpenSSH
            ufw delete limit 22/tcp || true
            ufw allow 22/tcp
            ufw --force enable

            echo "📥 Cloning or pulling backend code..."
            APP_DIR=/root/aiAgentBackend
            if [ ! -d "$APP_DIR" ]; then
              git clone https://github.com/Udit-Shukla/aiAgentBackend.git $APP_DIR
            fi
            cd $APP_DIR
            git reset --hard
            git pull origin main

            echo "🔑 Creating/updating .env file with secrets..."
            cat > .env << EOF
            ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}
            PORT=8000
            NODE_ENV=production
            EOF

            echo "🧾 Updating Nginx config if changed..."
            if ! cmp -s infra/nginx.conf /etc/nginx/sites-available/aiagent-backend; then
              cp infra/nginx.conf /etc/nginx/sites-available/aiagent-backend
              ln -sf /etc/nginx/sites-available/aiagent-backend /etc/nginx/sites-enabled/default
              nginx -t && systemctl reload nginx
            else
              echo "No changes in nginx.conf"
            fi

            echo "🔒 Checking SSL certificate..."
            if [ ! -f /etc/letsencrypt/live/aiagents.worxstream.io/fullchain.pem ]; then
              certbot --nginx -d aiagents.worxstream.io --non-interactive --agree-tos --email ${{ secrets.EMAIL }}
            else
              echo "SSL certificate already exists"
            fi

            echo "🐳 Rebuilding and running Docker container..."
            docker stop aiagent-backend || true
            docker rm aiagent-backend || true
            docker build --pull -t aiagent-backend .
            docker run -d --name aiagent-backend -p 8000:8000 --env-file .env aiagent-backend

name: Deploy to DigitalOcean

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            # Install Nginx if not installed
            if ! command -v nginx &> /dev/null; then
              apt-get update
              apt-get install -y nginx
            fi

            # Install Certbot if not installed
            if ! command -v certbot &> /dev/null; then
              apt-get update
              apt-get install -y certbot python3-certbot-nginx
            fi

            # Configure firewall
            ufw allow 'Nginx Full'
            ufw allow OpenSSH
            ufw --force enable

            # Copy Nginx configuration
            cat > /etc/nginx/sites-available/default << 'EOL'
            server {
                listen 80;
                listen [::]:80;
                server_name aiagents.worxstream.io;

                location / {
                    # Handle preflight requests
                    if ($request_method = 'OPTIONS') {
                        add_header 'Access-Control-Allow-Origin' 'https://a-iagents-uditshuklas-projects.vercel.app' always;
                        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
                        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
                        add_header 'Access-Control-Allow-Credentials' 'true' always;
                        add_header 'Access-Control-Max-Age' 1728000;
                        add_header 'Content-Type' 'text/plain; charset=utf-8';
                        add_header 'Content-Length' 0;
                        return 204;
                    }

                    proxy_pass http://localhost:8000;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host $host;
                    proxy_cache_bypass $http_upgrade;
                    
                    # CORS headers
                    add_header 'Access-Control-Allow-Origin' 'https://a-iagents-uditshuklas-projects.vercel.app' always;
                    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
                    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
                    add_header 'Access-Control-Allow-Credentials' 'true' always;
                }

                # Logging
                access_log /var/log/nginx/access.log;
                error_log /var/log/nginx/error.log;
            }
            EOL

            # Test Nginx configuration
            nginx -t

            # Restart Nginx
            systemctl restart nginx

            # Obtain SSL certificate
            certbot --nginx -d aiagents.worxstream.io --non-interactive --agree-tos --email ${{ secrets.EMAIL }}

            # Create .env file if it doesn't exist
            if [ ! -f .env ]; then
              touch .env
            fi

            # Pull latest changes
            git pull origin main

            # Stop and remove existing container
            docker stop aiagent-backend || true
            docker rm aiagent-backend || true

            # Build and run new container
            docker build -t aiagent-backend .
            docker run -d --name aiagent-backend -p 8000:8000 --env-file .env aiagent-backend 